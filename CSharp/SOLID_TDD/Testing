There are multiple frameworks avaialbe for .Net
1. MS Test
2. N Unit
3. X Unit 

you often need data for testing the code.
like customer or products. We create those data with Mocking frameworks.

The primary purpose of the unit test is that our code is functioning as expected. 

1.FaekitEasy:
2.Nsubstitute
3.Moq ( how to use code in isolation) 
 -- setup and create Moq objects
 -- setup mock methods /properties and return the values you want
 -- check the expected members are called/invoked - using behavior based testing
 --- create and testing exceptions

Different types of Moq objects : 

Fakes : 
Stubs : Provide answer to calls ..we can setup what a property returns and what a method returns.
      var moqObject = new Mock<"InterfaceYouWanttoMock">();
      Suppose InterfaceYouWanttoMock has method "Process" with takes string as a parameter.
      moqObject.Setup(x=> x.Process(it.Any<string>)).returns(); => with the setup mehtod you can configure the 
      retrun values. 
Mocks : To check if the property was accesed or method was called.
        moqObject.verify(x=> x.Initialise()) ==> this verfiy method is used for testing the behavior. if Initialise() 
        method is called.
        2. Above example is method  call wiht out any parameters. Now if you want to verify if the method is 
        beeing called wiht given parameters 
        moqObject.Verify(x=>x.Initialise("Raja")) => the Initialise method is called with "Raja"
Dummies : They never used by test code, to serve the purpose of input requirement like input to a mehtod.satisfy 
            ex (it.Any<string>, it.Any<int>)

Test double - is a generic term for either stubs, Mocks , Dummies or Fakes, it is  a generic term where you are replacing 
for production object with Moq object ()
